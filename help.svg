<svg viewBox="0 0 1600 1200" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <pattern id="stackPattern" patternUnits="userSpaceOnUse" width="4" height="4">
      <rect width="4" height="4" fill="#f0f0f0"/>
      <path d="M 0,4 l 4,-4 M -1,1 l 2,-2 M 3,5 l 2,-2" stroke="#ddd" stroke-width="0.5"/>
    </pattern>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="0" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#333"/>
    </marker>
    <marker id="redArrow" markerWidth="10" markerHeight="7" refX="0" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#e74c3c"/>
    </marker>
  </defs>
  
  <!-- Background -->
  <rect width="1600" height="1200" fill="#1a1a1a"/>
  
  <!-- Title -->
  <text x="800" y="30" text-anchor="middle" font-family="monospace" font-size="20" font-weight="bold" fill="#ffffff">
    42 Philosophers: Memory Layout &amp; Thread Synchronization Deep Dive
  </text>
  
  <!-- CPU Cores Section -->
  <g id="cpu-cores">
    <text x="50" y="70" font-family="monospace" font-size="14" font-weight="bold" fill="#ffffff">CPU CORES</text>
    
    <!-- Core 0 -->
    <rect x="50" y="80" width="100" height="60" fill="#2c3e50" stroke="#3498db" stroke-width="2"/>
    <text x="100" y="95" text-anchor="middle" font-family="monospace" font-size="10" fill="#ffffff">Core 0</text>
    <text x="100" y="110" text-anchor="middle" font-family="monospace" font-size="9" fill="#27ae60">Running</text>
    <text x="100" y="125" text-anchor="middle" font-family="monospace" font-size="8" fill="#27ae60">Thread 1</text>
    
    <!-- Core 1 -->
    <rect x="160" y="80" width="100" height="60" fill="#2c3e50" stroke="#3498db" stroke-width="2"/>
    <text x="210" y="95" text-anchor="middle" font-family="monospace" font-size="10" fill="#ffffff">Core 1</text>
    <text x="210" y="110" text-anchor="middle" font-family="monospace" font-size="9" fill="#27ae60">Running</text>
    <text x="210" y="125" text-anchor="middle" font-family="monospace" font-size="8" fill="#27ae60">Thread 3</text>
    
    <!-- Core 2 -->
    <rect x="270" y="80" width="100" height="60" fill="#2c3e50" stroke="#3498db" stroke-width="2"/>
    <text x="320" y="95" text-anchor="middle" font-family="monospace" font-size="10" fill="#ffffff">Core 2</text>
    <text x="320" y="110" text-anchor="middle" font-family="monospace" font-size="9" fill="#f39c12">Context</text>
    <text x="320" y="125" text-anchor="middle" font-family="monospace" font-size="8" fill="#f39c12">Switch</text>
    
    <!-- Core 3 -->
    <rect x="380" y="80" width="100" height="60" fill="#2c3e50" stroke="#3498db" stroke-width="2"/>
    <text x="430" y="95" text-anchor="middle" font-family="monospace" font-size="10" fill="#ffffff">Core 3</text>
    <text x="430" y="110" text-anchor="middle" font-family="monospace" font-size="9" fill="#95a5a6">Idle</text>
  </g>
  
  <!-- Memory Layout Section -->
  <g id="memory-layout">
    <text x="550" y="70" font-family="monospace" font-size="14" font-weight="bold" fill="#ffffff">PROCESS MEMORY LAYOUT</text>
    
    <!-- Code Segment -->
    <rect x="550" y="80" width="200" height="40" fill="#8e44ad" stroke="#9b59b6" stroke-width="2"/>
    <text x="650" y="95" text-anchor="middle" font-family="monospace" font-size="10" fill="#ffffff">CODE SEGMENT</text>
    <text x="650" y="110" text-anchor="middle" font-family="monospace" font-size="8" fill="#ffffff">0x400000 - 0x401000</text>
    
    <!-- Heap Section -->
    <rect x="550" y="130" width="200" height="120" fill="#34495e" stroke="#2c3e50" stroke-width="2"/>
    <text x="650" y="145" text-anchor="middle" font-family="monospace" font-size="10" font-weight="bold" fill="#ffffff">HEAP</text>
    <text x="650" y="160" text-anchor="middle" font-family="monospace" font-size="8" fill="#ffffff">0x600000 - 0x700000</text>
    
    <!-- t_data struct in heap -->
    <rect x="560" y="170" width="80" height="35" fill="#e67e22" stroke="#d35400" stroke-width="1"/>
    <text x="600" y="180" text-anchor="middle" font-family="monospace" font-size="7" fill="#ffffff">t_data</text>
    <text x="600" y="190" text-anchor="middle" font-family="monospace" font-size="6" fill="#ffffff">shared data</text>
    <text x="600" y="200" text-anchor="middle" font-family="monospace" font-size="6" fill="#ffffff">0x600010</text>
    
    <!-- Philosophers array in heap -->
    <rect x="650" y="170" width="90" height="35" fill="#27ae60" stroke="#229954" stroke-width="1"/>
    <text x="695" y="180" text-anchor="middle" font-family="monospace" font-size="7" fill="#ffffff">t_philo[5]</text>
    <text x="695" y="190" text-anchor="middle" font-family="monospace" font-size="6" fill="#ffffff">240 bytes</text>
    <text x="695" y="200" text-anchor="middle" font-family="monospace" font-size="6" fill="#ffffff">0x600100</text>
    
    <!-- Fork mutexes in heap -->
    <rect x="560" y="210" width="180" height="35" fill="#3498db" stroke="#2980b9" stroke-width="1"/>
    <text x="650" y="220" text-anchor="middle" font-family="monospace" font-size="7" fill="#ffffff">fork_mutexes[5]</text>
    <text x="650" y="230" text-anchor="middle" font-family="monospace" font-size="6" fill="#ffffff">320 bytes (64B each)</text>
    <text x="650" y="240" text-anchor="middle" font-family="monospace" font-size="6" fill="#ffffff">0x600200</text>
  </g>
  
  <!-- Thread Stacks Section -->
  <g id="thread-stacks">
    <text x="800" y="70" font-family="monospace" font-size="14" font-weight="bold" fill="#ffffff">THREAD STACKS (8MB each)</text>
    
    <!-- Stack 0 -->
    <rect x="800" y="80" width="60" height="100" fill="url(#stackPattern)" stroke="#7f8c8d" stroke-width="2"/>
    <text x="830" y="95" text-anchor="middle" font-family="monospace" font-size="8" fill="#2c3e50">Stack 0</text>
    <text x="830" y="105" text-anchor="middle" font-family="monospace" font-size="6" fill="#2c3e50">Main</text>
    <text x="830" y="170" text-anchor="middle" font-family="monospace" font-size="6" fill="#2c3e50">0x7fff8000</text>
    
    <!-- Stack 1 -->
    <rect x="870" y="80" width="60" height="100" fill="url(#stackPattern)" stroke="#27ae60" stroke-width="3"/>
    <text x="900" y="95" text-anchor="middle" font-family="monospace" font-size="8" fill="#27ae60">Stack 1</text>
    <text x="900" y="105" text-anchor="middle" font-family="monospace" font-size="6" fill="#27ae60">Phil 0</text>
    <text x="900" y="115" text-anchor="middle" font-family="monospace" font-size="6" fill="#27ae60">RUNNING</text>
    <text x="900" y="170" text-anchor="middle" font-family="monospace" font-size="6" fill="#2c3e50">0x7fff7000</text>
    
    <!-- Stack 2 -->
    <rect x="940" y="80" width="60" height="100" fill="url(#stackPattern)" stroke="#e74c3c" stroke-width="3"/>
    <text x="970" y="95" text-anchor="middle" font-family="monospace" font-size="8" fill="#e74c3c">Stack 2</text>
    <text x="970" y="105" text-anchor="middle" font-family="monospace" font-size="6" fill="#e74c3c">Phil 1</text>
    <text x="970" y="115" text-anchor="middle" font-family="monospace" font-size="6" fill="#e74c3c">BLOCKED</text>
    <text x="970" y="170" text-anchor="middle" font-family="monospace" font-size="6" fill="#2c3e50">0x7fff6000</text>
    
    <!-- Stack 3 -->
    <rect x="1010" y="80" width="60" height="100" fill="url(#stackPattern)" stroke="#27ae60" stroke-width="3"/>
    <text x="1040" y="95" text-anchor="middle" font-family="monospace" font-size="8" fill="#27ae60">Stack 3</text>
    <text x="1040" y="105" text-anchor="middle" font-family="monospace" font-size="6" fill="#27ae60">Phil 2</text>
    <text x="1040" y="115" text-anchor="middle" font-family="monospace" font-size="6" fill="#27ae60">RUNNING</text>
    <text x="1040" y="170" text-anchor="middle" font-family="monospace" font-size="6" fill="#2c3e50">0x7fff5000</text>
    
    <!-- Stack 4 -->
    <rect x="1080" y="80" width="60" height="100" fill="url(#stackPattern)" stroke="#e74c3c" stroke-width="3"/>
    <text x="1110" y="95" text-anchor="middle" font-family="monospace" font-size="8" fill="#e74c3c">Stack 4</text>
    <text x="1110" y="105" text-anchor="middle" font-family="monospace" font-size="6" fill="#e74c3c">Phil 3</text>
    <text x="1110" y="115" text-anchor="middle" font-family="monospace" font-size="6" fill="#e74c3c">BLOCKED</text>
    <text x="1110" y="170" text-anchor="middle" font-family="monospace" font-size="6" fill="#2c3e50">0x7fff4000</text>
    
    <!-- Stack 5 -->
    <rect x="1150" y="80" width="60" height="100" fill="url(#stackPattern)" stroke="#f39c12" stroke-width="3"/>
    <text x="1180" y="95" text-anchor="middle" font-family="monospace" font-size="8" fill="#f39c12">Stack 5</text>
    <text x="1180" y="105" text-anchor="middle" font-family="monospace" font-size="6" fill="#f39c12">Phil 4</text>
    <text x="1180" y="115" text-anchor="middle" font-family="monospace" font-size="6" fill="#f39c12">READY</text>
    <text x="1180" y="170" text-anchor="middle" font-family="monospace" font-size="6" fill="#2c3e50">0x7fff3000</text>
  </g>
  
  <!-- Detailed Mutex Structure -->
  <g id="mutex-details">
    <text x="50" y="220" font-family="monospace" font-size="14" font-weight="bold" fill="#ffffff">MUTEX INTERNAL STRUCTURE (64 bytes each)</text>
    
    <!-- Fork 0 Mutex -->
    <rect x="50" y="230" width="140" height="80" fill="#e67e22" stroke="#d35400" stroke-width="2"/>
    <text x="120" y="245" text-anchor="middle" font-family="monospace" font-size="9" font-weight="bold" fill="#ffffff">Fork 0 Mutex</text>
    <text x="55" y="260" font-family="monospace" font-size="7" fill="#ffffff">lock_state: LOCKED</text>
    <text x="55" y="270" font-family="monospace" font-size="7" fill="#ffffff">owner_id: 12345</text>
    <text x="55" y="280" font-family="monospace" font-size="7" fill="#ffffff">wait_queue: [12347]</text>
    <text x="55" y="290" font-family="monospace" font-size="7" fill="#ffffff">type: MUTEX_NORMAL</text>
    <text x="55" y="300" font-family="monospace" font-size="6" fill="#bdc3c7">0x600200</text>
    
    <!-- Fork 1 Mutex -->
    <rect x="200" y="230" width="140" height="80" fill="#3498db" stroke="#2980b9" stroke-width="2"/>
    <text x="270" y="245" text-anchor="middle" font-family="monospace" font-size="9" font-weight="bold" fill="#ffffff">Fork 1 Mutex</text>
    <text x="205" y="260" font-family="monospace" font-size="7" fill="#ffffff">lock_state: UNLOCKED</text>
    <text x="205" y="270" font-family="monospace" font-size="7" fill="#ffffff">owner_id: 0</text>
    <text x="205" y="280" font-family="monospace" font-size="7" fill="#ffffff">wait_queue: []</text>
    <text x="205" y="290" font-family="monospace" font-size="7" fill="#ffffff">type: MUTEX_NORMAL</text>
    <text x="205" y="300" font-family="monospace" font-size="6" fill="#bdc3c7">0x600240</text>
    
    <!-- Fork 2 Mutex -->
    <rect x="350" y="230" width="140" height="80" fill="#e67e22" stroke="#d35400" stroke-width="2"/>
    <text x="420" y="245" text-anchor="middle" font-family="monospace" font-size="9" font-weight="bold" fill="#ffffff">Fork 2 Mutex</text>
    <text x="355" y="260" font-family="monospace" font-size="7" fill="#ffffff">lock_state: LOCKED</text>
    <text x="355" y="270" font-family="monospace" font-size="7" fill="#ffffff">owner_id: 12348</text>
    <text x="355" y="280" font-family="monospace" font-size="7" fill="#ffffff">wait_queue: [12349]</text>
    <text x="355" y="290" font-family="monospace" font-size="7" fill="#ffffff">type: MUTEX_NORMAL</text>
    <text x="355" y="300" font-family="monospace" font-size="6" fill="#bdc3c7">0x600280</text>
  </g>
  
  <!-- Philosopher Structs Detail -->
  <g id="philo-structs">
    <text x="50" y="340" font-family="monospace" font-size="14" font-weight="bold" fill="#ffffff">PHILOSOPHER STRUCTS (48 bytes each)</text>
    
    <!-- Philosopher 0 -->
    <rect x="50" y="350" width="120" height="90" fill="#27ae60" stroke="#229954" stroke-width="2"/>
    <text x="110" y="365" text-anchor="middle" font-family="monospace" font-size="9" font-weight="bold" fill="#ffffff">Philosopher 0</text>
    <text x="55" y="380" font-family="monospace" font-size="7" fill="#ffffff">id: 0</text>
    <text x="55" y="390" font-family="monospace" font-size="7" fill="#ffffff">thread_id: 12345</text>
    <text x="55" y="400" font-family="monospace" font-size="7" fill="#ffffff">meals_eaten: 3</text>
    <text x="55" y="410" font-family="monospace" font-size="7" fill="#ffffff">last_meal: 1674...</text>
    <text x="55" y="420" font-family="monospace" font-size="7" fill="#ffffff">left_fork_id: 0</text>
    <text x="55" y="430" font-family="monospace" font-size="7" fill="#ffffff">right_fork_id: 1</text>
    
    <!-- Philosopher 1 -->
    <rect x="180" y="350" width="120" height="90" fill="#e74c3c" stroke="#c0392b" stroke-width="2"/>
    <text x="240" y="365" text-anchor="middle" font-family="monospace" font-size="9" font-weight="bold" fill="#ffffff">Philosopher 1</text>
    <text x="185" y="380" font-family="monospace" font-size="7" fill="#ffffff">id: 1</text>
    <text x="185" y="390" font-family="monospace" font-size="7" fill="#ffffff">thread_id: 12347</text>
    <text x="185" y="400" font-family="monospace" font-size="7" fill="#ffffff">meals_eaten: 2</text>
    <text x="185" y="410" font-family="monospace" font-size="7" fill="#ffffff">last_meal: 1674...</text>
    <text x="185" y="420" font-family="monospace" font-size="7" fill="#ffffff">left_fork_id: 1</text>
    <text x="185" y="430" font-family="monospace" font-size="7" fill="#ffffff">right_fork_id: 2</text>
    
    <!-- Philosopher 2 -->
    <rect x="310" y="350" width="120" height="90" fill="#27ae60" stroke="#229954" stroke-width="2"/>
    <text x="370" y="365" text-anchor="middle" font-family="monospace" font-size="9" font-weight="bold" fill="#ffffff">Philosopher 2</text>
    <text x="315" y="380" font-family="monospace" font-size="7" fill="#ffffff">id: 2</text>
    <text x="315" y="390" font-family="monospace" font-size="7" fill="#ffffff">thread_id: 12348</text>
    <text x="315" y="400" font-family="monospace" font-size="7" fill="#ffffff">meals_eaten: 4</text>
    <text x="315" y="410" font-family="monospace" font-size="7" fill="#ffffff">last_meal: 1674...</text>
    <text x="315" y="420" font-family="monospace" font-size="7" fill="#ffffff">left_fork_id: 2</text>
    <text x="315" y="430" font-family="monospace" font-size="7" fill="#ffffff">right_fork_id: 3</text>
  </g>
  
  <!-- Circular Table Logic -->
  <g id="circular-table">
    <text x="500" y="340" font-family="monospace" font-size="14" font-weight="bold" fill="#ffffff">CIRCULAR TABLE LOGIC</text>
    
    <!-- Circle representing table -->
    <circle cx="600" cy="400" r="80" fill="none" stroke="#95a5a6" stroke-width="2"/>
    
    <!-- Philosophers around table -->
    <circle cx="600" cy="320" r="15" fill="#27ae60" stroke="#229954" stroke-width="2"/>
    <text x="600" y="325" text-anchor="middle" font-family="monospace" font-size="8" fill="#ffffff">P0</text>
    
    <circle cx="676" cy="350" r="15" fill="#e74c3c" stroke="#c0392b" stroke-width="2"/>
    <text x="676" y="355" text-anchor="middle" font-family="monospace" font-size="8" fill="#ffffff">P1</text>
    
    <circle cx="676" cy="450" r="15" fill="#27ae60" stroke="#229954" stroke-width="2"/>
    <text x="676" y="455" text-anchor="middle" font-family="monospace" font-size="8" fill="#ffffff">P2</text>
    
    <circle cx="524" cy="450" r="15" fill="#e74c3c" stroke="#c0392b" stroke-width="2"/>
    <text x="524" y="455" text-anchor="middle" font-family="monospace" font-size="8" fill="#ffffff">P3</text>
    
    <circle cx="524" cy="350" r="15" fill="#f39c12" stroke="#e67e22" stroke-width="2"/>
    <text x="524" y="355" text-anchor="middle" font-family="monospace" font-size="8" fill="#ffffff">P4</text>
    
    <!-- Forks -->
    <rect x="595" y="335" width="10" height="20" fill="#e67e22" stroke="#d35400" stroke-width="1"/>
    <text x="600" y="365" text-anchor="middle" font-family="monospace" font-size="6" fill="#ffffff">F0</text>
    
    <rect x="660" y="365" width="10" height="20" fill="#3498db" stroke="#2980b9" stroke-width="1"/>
    <text x="665" y="395" text-anchor="middle" font-family="monospace" font-size="6" fill="#ffffff">F1</text>
    
    <rect x="660" y="415" width="10" height="20" fill="#e67e22" stroke="#d35400" stroke-width="1"/>
    <text x="665" y="445" text-anchor="middle" font-family="monospace" font-size="6" fill="#ffffff">F2</text>
    
    <rect x="530" y="415" width="10" height="20" fill="#3498db" stroke="#2980b9" stroke-width="1"/>
    <text x="535" y="445" text-anchor="middle" font-family="monospace" font-size="6" fill="#ffffff">F3</text>
    
    <rect x="530" y="365" width="10" height="20" fill="#3498db" stroke="#2980b9" stroke-width="1"/>
    <text x="535" y="395" text-anchor="middle" font-family="monospace" font-size="6" fill="#ffffff">F4</text>
  </g>
  
  <!-- Deadlock Scenario -->
  <g id="deadlock">
    <text x="750" y="340" font-family="monospace" font-size="14" font-weight="bold" fill="#e74c3c">DEADLOCK SCENARIO</text>
    
    <!-- Circular wait chain -->
    <rect x="750" y="350" width="300" height="120" fill="#2c3e50" stroke="#e74c3c" stroke-width="2" stroke-dasharray="5,5"/>
    
    <text x="900" y="370" text-anchor="middle" font-family="monospace" font-size="10" fill="#e74c3c">Circular Wait Chain</text>
    
    <!-- Phil 0 wants Fork 1 -->
    <text x="760" y="390" font-family="monospace" font-size="8" fill="#ffffff">Phil 0 (holds F0) → wants F1</text>
    <text x="760" y="405" font-family="monospace" font-size="8" fill="#ffffff">Phil 1 (holds F1) → wants F2</text>
    <text x="760" y="420" font-family="monospace" font-size="8" fill="#ffffff">Phil 2 (holds F2) → wants F3</text>
    <text x="760" y="435" font-family="monospace" font-size="8" fill="#ffffff">Phil 3 (holds F3) → wants F4</text>
    <text x="760" y="450" font-family="monospace" font-size="8" fill="#ffffff">Phil 4 (holds F4) → wants F0</text>
    
    <!-- Circular arrow -->
    <path d="M 1020 390 Q 1040 360 1020 330 Q 1000 310 970 330 Q 940 350 970 390 Q 1000 410 1020 390" 
          fill="none" stroke="#e74c3c" stroke-width="2" marker-end="url(#redArrow)"/>
  </g>
  
  <!-- System Calls Section -->
  <g id="syscalls">
    <text x="1100" y="340" font-family="monospace" font-size="14" font-weight="bold" fill="#ffffff">KERNEL SYSCALLS</text>
    
    <rect x="1100" y="350" width="180" height="100" fill="#8e44ad" stroke="#9b59b6" stroke-width="2"/>
    <text x="1190" y="370" text-anchor="middle" font-family="monospace" font-size="10" fill="#ffffff">Kernel Space</text>
    
    <text x="1110" y="390" font-family="monospace" font-size="8" fill="#ffffff">pthread_mutex_lock()</text>
    <text x="1110" y="405" font-family="monospace" font-size="8" fill="#ffffff">→ futex() syscall</text>
    <text x="1110" y="420" font-family="monospace" font-size="8" fill="#ffffff">→ scheduler update</text>
    <text x="1110" y="435" font-family="monospace" font-size="8" fill="#ffffff">→ context switch</text>
  </g>
  
  <!-- Memory Barriers and Atomics -->
  <g id="memory-barriers">
    <text x="50" y="480" font-family="monospace" font-size="14" font-weight="bold" fill="#ffffff">ATOMIC OPERATIONS &amp; MEMORY BARRIERS</text>
    
    <rect x="50" y="490" width="400" height="80" fill="#34495e" stroke="#2c3e50" stroke-width="2"/>
    <text x="250" y="510" text-anchor="middle" font-family="monospace" font-size="10" fill="#ffffff">CPU Memory Coherency Protocol</text>
    
    <text x="60" y="530" font-family="monospace" font-size="8" fill="#ffffff">1. Thread A: CAS(mutex_addr, UNLOCKED, LOCKED) → CPU atomic operation</text>
    <text x="60" y="545" font-family="monospace" font-size="8" fill="#ffffff">2. Memory barrier ensures ordering: load/store operations cannot reorder</text>
    <text x="60" y="560" font-family="monospace" font-size="8" fill="#ffffff">3. Cache coherency: other CPUs see the change via MESI protocol</text>
  </g>
  
  <!-- Timing Operations -->
  <g id="timing">
    <text x="500" y="480" font-family="monospace" font-size="14" font-weight="bold" fill="#ffffff">TIMING OPERATIONS</text>
    
    <rect x="500" y="490" width="300" height="80" fill="#16a085" stroke="#1abc9c" stroke-width="2"/>
    
    <text x="510" y="510" font-family="monospace" font-size="8" fill="#ffffff">gettimeofday() → microsecond precision</text>
    <text x="510" y="525" font-family="monospace" font-size="8" fill="#ffffff">usleep(eat_time * 1000) → thread suspension</text>
    <text x="510" y="540" font-family="monospace" font-size="8" fill="#ffffff">Kernel scheduler: timer interrupt → context switch</text>
    <text x="510" y="555" font-family="monospace" font-size="8" fill="#ffffff">Thread moved to sleep queue, CPU freed</text>
  </g>
  
  <!-- Race Condition Visualization -->
  <g id="race-condition">
    <text x="850" y="480" font-family="monospace" font-size="14" font-weight="bold" fill="#e74c3c">RACE CONDITION</text>
    
    <rect x="850" y="490" width="300" height="80" fill="#2c3e50" stroke="#e74c3c" stroke-width="2" stroke-dasharray="3,3"/>
    
    <text x="860" y="510" font-family="monospace" font-size="8" fill="#e74c3c">Without mutex protection:</text>
    <text x="860" y="525" font-family="monospace" font-size="8" fill="#ffffff">Thread 1: LOAD meals_eaten (3) → INCREMENT → STORE (4)</text>
    <text x="860" y="540" font-family="monospace" font-size="8" fill="#ffffff">Thread 2: LOAD meals_eaten (3) → INCREMENT → STORE (4)</text>
    <text x="860" y="555" font-family="monospace" font-size="8" fill="#e74c3c">Result: Lost increment! Should be 5, but got 4</text>
  </g>
  
  <!-- Thread-to-Mutex Relationships -->
  <g id="thread-mutex-arrows">
    <!-- Phil 0 to Fork 0 (owns) -->
    <line x1="900" y1="180" x2="120" y2="230" stroke="#27ae60" stroke-width="2" marker-end="url(#arrowhead)"/>
    <text x="500" y="200" font-family="monospace" font-size="7" fill="#27ae60">owns</text>
    
    <!-- Phil 1 waiting for Fork 0 -->
    <line x1="970" y1="180" x2="120" y2="280" stroke="#e74c3c" stroke-width="2" stroke-dasharray="5,5" marker-end="url(#redArrow)"/>
    <text x="540" y="230" font-family="monospace" font-size="7" fill="#e74c3c">waiting</text>
    
    <!-- Phil 2 owns Fork 2 -->
    <line x1="1040" y1="180" x2="420" y2="230" stroke="#27ae60" stroke-width="2" marker-end="url(#arrowhead)"/>
    <text x="730" y="200" font-family="monospace" font-size="7" fill="#27ae60">owns</text>
    
    <!-- Phil 3 waiting for Fork 2 -->
    <line x1="1110" y1="180" x2="420" y2="280" stroke="#e74c3c" stroke-width="2" stroke-dasharray="5,5" marker-end="url(#redArrow)"/>
    <text x="760" y="230" font-family="monospace" font-size="7" fill="#e74c3c">waiting</text>
  </g>
  
  <!-- Shared Data Access Pattern -->
  <g id="shared-data-access">
    <text x="50" y="600" font-family="monospace" font-size="14" font-weight="bold" fill="#ffffff">SHARED DATA ACCESS PATTERN</text>
    
    <!-- All threads accessing t_data -->
    <rect x="300" y="650" width="100" height="60" fill="#e67e22" stroke="#d35400" stroke-width="2"/>
    <text x="350" y="670" text-anchor="middle" font-family="monospace" font-size="10" fill="#ffffff">t_data</text>
    <text x="350" y="685" text-anchor="middle" font-family="monospace" font-size="8" fill="#ffffff">num_philos: 5</text>
    <text x="350" y="700" text-anchor="middle" font-family="monospace" font-size="8" fill="#ffffff">time_to_die: 800</text>
    
    <!-- Arrows from all threads to shared data -->
    <line x1="100" y1="620" x2="320" y2="660" stroke="#ffffff" stroke-width="1" marker-end="url(#arrowhead)"/>
    <line x1="150" y1="620" x2="340" y2="660" stroke="#ffffff" stroke-width="1" marker-end="url(#arrowhead)"/>
    <line x1="200" y1="620" x2="360" y2="660" stroke="#ffffff" stroke-width="1" marker-end="url(#arrowhead)"/>
    <line x1="250" y1="620" x2="380" y2="660" stroke="#ffffff" stroke-width="1" marker-end="url(#arrowhead)"/>
    <line x1="300" y1="620" x2="400" y2="660" stroke="#ffffff" stroke-width="1" marker-end="url(#arrowhead)"/>
    
    <text x="80" y="615" font-family="monospace" font-size="8" fill="#27ae60">T1</text>
    <text x="130" y="615" font-family="monospace" font-size="8" fill="#e74c3c">T2</text>
    <text x="180" y="615" font-family="monospace" font-size="8" fill="#27ae60">T3</text>
    <text x="230" y="615" font-family="monospace" font-size="8" fill="#e74c3c">T4</text>
    <text x="280" y="615" font-family="monospace" font-size="8" fill="#f39c12">T5</text>
    
    <text x="200" y="640" text-anchor="middle" font-family="monospace" font-size="8" fill="#ffffff">READ-ONLY ACCESS</text>
  </g>
  
  <!-- Memory Size Details -->
  <g id="memory-sizes">
    <text x="450" y="600" font-family="monospace" font-size="14" font-weight="bold" fill="#ffffff">MEMORY SIZES</text>
    
    <rect x="450" y="610" width="250" height="100" fill="#2c3e50" stroke="#34495e" stroke-width="2"/>
    
    <text x="460" y="630" font-family="monospace" font-size="9" fill="#ffffff">pthread_mutex_t: 64 bytes (includes padding)</text>
    <text x="460" y="645" font-family="monospace" font-size="9" fill="#ffffff">t_philo struct: 48 bytes per philosopher</text>
    <text x="460" y="660" font-family="monospace" font-size="9" fill="#ffffff">Thread stack: 8MB (8,388,608 bytes)</text>
    <text x="460" y="675" font-family="monospace" font-size="9" fill="#ffffff">t_data struct: ~32 bytes</text>
    <text x="460" y="690" font-family="monospace" font-size="9" fill="#ffffff">Total heap usage: ~512 bytes</text>
    <text x="460" y="705" font-family="monospace" font-size="9" fill="#ffffff">Total stack usage: ~40MB</text>
  </g>
  
  <!-- Context Switch Details -->
  <g id="context-switch">
    <text x="750" y="600" font-family="monospace" font-size="14" font-weight="bold" fill="#ffffff">CONTEXT SWITCH MECHANICS</text>
    
    <rect x="750" y="610" width="300" height="100" fill="#8e44ad" stroke="#9b59b6" stroke-width="2"/>
    
    <text x="760" y="630" font-family="monospace" font-size="9" fill="#ffffff">1. Timer interrupt or blocking syscall</text>
    <text x="760" y="645" font-family="monospace" font-size="9" fill="#ffffff">2. Save CPU registers to current thread's PCB</text>
    <text x="760" y="660" font-family="monospace" font-size="9" fill="#ffffff">3. Update thread state (RUNNING → READY/BLOCKED)</text>
    <text x="760" y="675" font-family="monospace" font-size="9" fill="#ffffff">4. Select next thread from ready queue</text>
    <text x="760" y="690" font-family="monospace" font-size="9" fill="#ffffff">5. Restore registers, switch memory mappings</text>
    <text x="760" y="705" font-family="monospace" font-size="9" fill="#ffffff">6. Jump to new thread's instruction pointer</text>
  </g>
  
  <!-- Virtual Memory Layout -->
  <g id="virtual-memory">
    <text x="1100" y="600" font-family="monospace" font-size="14" font-weight="bold" fill="#ffffff">VIRTUAL MEMORY LAYOUT</text>
    
    <!-- Memory regions -->
    <rect x="1100" y="610" width="80" height="20" fill="#8e44ad" stroke="#9b59b6"/>
    <text x="1140" y="625" text-anchor="middle" font-family="monospace" font-size="7" fill="#ffffff">Kernel</text>
    <text x="1190" y="625" font-family="monospace" font-size="7" fill="#ffffff">0xFFFF...</text>
    
    <rect x="1100" y="630" width="80" height="15" fill="url(#stackPattern)" stroke="#7f8c8d"/>
    <text x="1140" y="642" text-anchor="middle" font-family="monospace" font-size="6" fill="#2c3e50">Stacks</text>
    <text x="1190" y="642" font-family="monospace" font-size="7" fill="#ffffff">0x7FFF...</text>
    
    <rect x="1100" y="645" width="80" height="15" fill="#34495e" stroke="#2c3e50"/>
    <text x="1140" y="657" text-anchor="middle" font-family="monospace" font-size="6" fill="#ffffff">Heap</text>
    <text x="1190" y="657" font-family="monospace" font-size="7" fill="#ffffff">0x6000...</text>
    
    <rect x="1100" y="660" width="80" height="15" fill="#8e44ad" stroke="#9b59b6"/>
    <text x="1140" y="672" text-anchor="middle" font-family="monospace" font-size="6" fill="#ffffff">Code</text>
    <text x="1190" y="672" font-family="monospace" font-size="7" fill="#ffffff">0x4000...</text>
  </g>
  
  <!-- Legend -->
  <g id="legend">
    <text x="50" y="750" font-family="monospace" font-size="14" font-weight="bold" fill="#ffffff">LEGEND</text>
    
    <rect x="50" y="760" width="600" height="120" fill="#2c3e50" stroke="#34495e" stroke-width="1"/>
    
    <!-- Thread States -->
    <text x="60" y="780" font-family="monospace" font-size="10" font-weight="bold" fill="#ffffff">Thread States:</text>
    <rect x="60" y="785" width="15" height="10" fill="#27ae60" stroke="#229954"/>
    <text x="80" y="795" font-family="monospace" font-size="8" fill="#ffffff">RUNNING (on CPU)</text>
    
    <rect x="60" y="800" width="15" height="10" fill="#e74c3c" stroke="#c0392b"/>
    <text x="80" y="810" font-family="monospace" font-size="8" fill="#ffffff">BLOCKED (waiting for mutex)</text>
    
    <rect x="60" y="815" width="15" height="10" fill="#f39c12" stroke="#e67e22"/>
    <text x="80" y="825" font-family="monospace" font-size="8" fill="#ffffff">READY (can be scheduled)</text>
    
    <!-- Mutex States -->
    <text x="250" y="780" font-family="monospace" font-size="10" font-weight="bold" fill="#ffffff">Mutex States:</text>
    <rect x="250" y="785" width="15" height="10" fill="#e67e22" stroke="#d35400"/>
    <text x="270" y="795" font-family="monospace" font-size="8" fill="#ffffff">LOCKED (owned by thread)</text>
    
    <rect x="250" y="800" width="15" height="10" fill="#3498db" stroke="#2980b9"/>
    <text x="270" y="810" font-family="monospace" font-size="8" fill="#ffffff">UNLOCKED (available)</text>
    
    <!-- Memory Regions -->
    <text x="450" y="780" font-family="monospace" font-size="10" font-weight="bold" fill="#ffffff">Memory Regions:</text>
    <rect x="450" y="785" width="15" height="10" fill="#34495e" stroke="#2c3e50"/>
    <text x="470" y="795" font-family="monospace" font-size="8" fill="#ffffff">Heap (dynamic allocation)</text>
    
    <rect x="450" y="800" width="15" height="10" fill="url(#stackPattern)" stroke="#7f8c8d"/>
    <text x="470" y="810" font-family="monospace" font-size="8" fill="#ffffff">Stack (per-thread)</text>
    
    <rect x="450" y="815" width="15" height="10" fill="#8e44ad" stroke="#9b59b6"/>
    <text x="470" y="825" font-family="monospace" font-size="8" fill="#ffffff">Code/Kernel space</text>
    
    <!-- Arrows -->
    <text x="60" y="845" font-family="monospace" font-size="10" font-weight="bold" fill="#ffffff">Arrows:</text>
    <line x1="60" y1="850" x2="90" y2="850" stroke="#27ae60" stroke-width="2" marker-end="url(#arrowhead)"/>
    <text x="95" y="855" font-family="monospace" font-size="8" fill="#ffffff">Owns/Has access</text>
    
    <line x1="60" y1="865" x2="90" y2="865" stroke="#e74c3c" stroke-width="2" stroke-dasharray="5,5" marker-end="url(#redArrow)"/>
    <text x="95" y="870" font-family="monospace" font-size="8" fill="#ffffff">Waiting/Blocked</text>
  </g>
  
  <!-- Key Insights Box -->
  <g id="insights">
    <text x="700" y="750" font-family="monospace" font-size="14" font-weight="bold" fill="#ffffff">KEY INSIGHTS</text>
    
    <rect x="700" y="760" width="450" height="120" fill="#16a085" stroke="#1abc9c" stroke-width="2"/>
    
    <text x="710" y="780" font-family="monospace" font-size="9" font-weight="bold" fill="#ffffff">• Mutexes are just memory locations with atomic operations</text>
    <text x="710" y="795" font-family="monospace" font-size="9" font-weight="bold" fill="#ffffff">• Threads exist as separate stacks sharing same heap</text>
    <text x="710" y="810" font-family="monospace" font-size="9" font-weight="bold" fill="#ffffff">• CPU cores execute threads, kernel manages scheduling</text>
    <text x="710" y="825" font-family="monospace" font-size="9" font-weight="bold" fill="#ffffff">• Synchronization prevents race conditions via memory barriers</text>
    <text x="710" y="840" font-family="monospace" font-size="9" font-weight="bold" fill="#ffffff">• Deadlocks occur when circular wait chains form</text>
    <text x="710" y="855" font-family="monospace" font-size="9" font-weight="bold" fill="#ffffff">• Context switches save/restore CPU state between threads</text>
    <text x="710" y="870" font-family="monospace" font-size="9" font-weight="bold" fill="#ffffff">• Virtual memory isolates processes, shares code segments</text>
  </g>
  
  <!-- Address Space Layout -->
  <g id="address-space">
    <text x="1200" y="750" font-family="monospace" font-size="12" font-weight="bold" fill="#ffffff">ADDRESS SPACE</text>
    
    <text x="1210" y="770" font-family="monospace" font-size="8" fill="#ffffff">High Memory:</text>
    <text x="1210" y="785" font-family="monospace" font-size="7" fill="#8e44ad">0xFFFFFFFF - Kernel</text>
    <text x="1210" y="800" font-family="monospace" font-size="7" fill="#7f8c8d">0x7FFF8000 - Stack 0</text>
    <text x="1210" y="815" font-family="monospace" font-size="7" fill="#7f8c8d">0x7FFF7000 - Stack 1</text>
    <text x="1210" y="830" font-family="monospace" font-size="7" fill="#7f8c8d">0x7FFF6000 - Stack 2</text>
    <text x="1210" y="845" font-family="monospace" font-size="7" fill="#34495e">0x600000 - Heap</text>
    <text x="1210" y="860" font-family="monospace" font-size="7" fill="#8e44ad">0x400000 - Code</text>
    <text x="1210" y="875" font-family="monospace" font-size="8" fill="#ffffff">Low Memory</text>
  </g>
  
  <!-- Performance Note -->
  <text x="800" y="1150" text-anchor="middle" font-family="monospace" font-size="10" fill="#95a5a6">
    This diagram shows the actual system-level implementation behind pthread abstractions
  </text>
  <text x="800" y="1170" text-anchor="middle" font-family="monospace" font-size="10" fill="#95a5a6">
    Understanding these mechanics is crucial for debugging race conditions and optimizing performance
  </text>
</svg>